/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.39
 * Generated at: 2019-03-30 14:18:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mymap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"http://localhost:8080/geoserver/openlayers3/ol.css\" type=\"text/css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .ol-zoom {\r\n");
      out.write("          top: 52px;\r\n");
      out.write("        }\r\n");
      out.write("        .ol-toggle-options {\r\n");
      out.write("          z-index: 1000;\r\n");
      out.write("          background: rgba(255,255,255,0.4);\r\n");
      out.write("          border-radius: 4px;\r\n");
      out.write("          padding: 2px;\r\n");
      out.write("          position: absolute;\r\n");
      out.write("          left: 8px;\r\n");
      out.write("          top: 8px;\r\n");
      out.write("        }\r\n");
      out.write("        #updateFilterButton, #resetFilterButton {\r\n");
      out.write("          height: 22px;\r\n");
      out.write("          width: 22px;\r\n");
      out.write("          text-align: center;\r\n");
      out.write("          text-decoration: none !important;\r\n");
      out.write("          line-height: 22px;\r\n");
      out.write("          margin: 1px;\r\n");
      out.write("          font-family: 'Lucida Grande',Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif;\r\n");
      out.write("          font-weight: bold !important;\r\n");
      out.write("          background: rgba(0,60,136,0.5);\r\n");
      out.write("          color: white !important;\r\n");
      out.write("          padding: 2px;\r\n");
      out.write("        }\r\n");
      out.write("        .ol-toggle-options a {\r\n");
      out.write("          background: rgba(0,60,136,0.5);\r\n");
      out.write("          color: white;\r\n");
      out.write("          display: block;\r\n");
      out.write("          font-family: 'Lucida Grande',Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif;\r\n");
      out.write("          font-size: 19px;\r\n");
      out.write("          font-weight: bold;\r\n");
      out.write("          height: 22px;\r\n");
      out.write("          line-height: 11px;\r\n");
      out.write("          margin: 1px;\r\n");
      out.write("          padding: 0;\r\n");
      out.write("          text-align: center;\r\n");
      out.write("          text-decoration: none;\r\n");
      out.write("          width: 22px;\r\n");
      out.write("          border-radius: 2px;\r\n");
      out.write("        }\r\n");
      out.write("        .ol-toggle-options a:hover {\r\n");
      out.write("          color: #fff;\r\n");
      out.write("          text-decoration: none;\r\n");
      out.write("          background: rgba(0,60,136,0.7);\r\n");
      out.write("        }\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;\r\n");
      out.write("            font-size: small;\r\n");
      out.write("        }\r\n");
      out.write("        iframe {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 250px;\r\n");
      out.write("            border: none;\r\n");
      out.write("        }\r\n");
      out.write("        /* Toolbar styles */\r\n");
      out.write("        #toolbar {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            padding-bottom: 0.5em;\r\n");
      out.write("        }\r\n");
      out.write("        #toolbar ul {\r\n");
      out.write("            list-style: none;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("        #toolbar ul li {\r\n");
      out.write("            float: left;\r\n");
      out.write("            padding-right: 1em;\r\n");
      out.write("            padding-bottom: 0.5em;\r\n");
      out.write("        }\r\n");
      out.write("        #toolbar ul li a {\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            font-size: smaller;\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("            color: black;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("        #toolbar ul li a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("        #toolbar ul li * {\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("        }\r\n");
      out.write("        #map {\r\n");
      out.write("            clear: both;\r\n");
      out.write("            position: relative;\r\n");
      out.write("            width: 768px;\r\n");
      out.write("            height: 567px;\r\n");
      out.write("            border: 1px solid black;\r\n");
      out.write("        }\r\n");
      out.write("        #wrapper {\r\n");
      out.write("            width: 768px;\r\n");
      out.write("        }\r\n");
      out.write("        #location {\r\n");
      out.write("            float: right;\r\n");
      out.write("        }\r\n");
      out.write("        /* Styles used by the default GetFeatureInfo output, added to make IE happy */\r\n");
      out.write("        table.featureInfo, table.featureInfo td, table.featureInfo th {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            font-size: 90%;\r\n");
      out.write("            padding: .2em .1em;\r\n");
      out.write("        }\r\n");
      out.write("        table.featureInfo th {\r\n");
      out.write("            padding: .2em .2em;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            background: #eee;\r\n");
      out.write("        }\r\n");
      out.write("        table.featureInfo td {\r\n");
      out.write("            background: #fff;\r\n");
      out.write("        }\r\n");
      out.write("        table.featureInfo tr.odd td {\r\n");
      out.write("            background: #eee;\r\n");
      out.write("        }\r\n");
      out.write("        table.featureInfo caption {\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            font-size: 100%;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            padding: .2em .2em;\r\n");
      out.write("        }\r\n");
      out.write("        .ol-popup {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      background-color: white;\r\n");
      out.write("      -webkit-filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));\r\n");
      out.write("      filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));\r\n");
      out.write("      padding: 15px;\r\n");
      out.write("      border-radius: 10px;\r\n");
      out.write("      border: 1px solid #cccccc;\r\n");
      out.write("      bottom: 12px;\r\n");
      out.write("      left: -50px;\r\n");
      out.write("      min-width: 280px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .ol-popup:after,\r\n");
      out.write("    .ol-popup:before {\r\n");
      out.write("      top: 100%;\r\n");
      out.write("      border: solid transparent;\r\n");
      out.write("      content: \" \";\r\n");
      out.write("      height: 0;\r\n");
      out.write("      width: 0;\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      pointer-events: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .ol-popup:after {\r\n");
      out.write("      border-top-color: white;\r\n");
      out.write("      border-width: 10px;\r\n");
      out.write("      left: 48px;\r\n");
      out.write("      margin-left: -10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .ol-popup:before {\r\n");
      out.write("      border-top-color: #cccccc;\r\n");
      out.write("      border-width: 11px;\r\n");
      out.write("      left: 48px;\r\n");
      out.write("      margin-left: -11px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .ol-popup-closer {\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      top: 2px;\r\n");
      out.write("      right: 8px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .ol-popup-closer:after {\r\n");
      out.write("      content: \"close\";\r\n");
      out.write("    }\r\n");
      out.write("    </style>\r\n");
      out.write("    <!-- <script src=\"http://localhost:8080/geoserver/openlayers3/ol.js\" type=\"text/javascript\"></script> -->\r\n");
      out.write("    <script src=\"http://localhost:8080/ol.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL\"></script> -->\r\n");
      out.write("    <title>OpenLayers map preview</title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <div id=\"toolbar\" style=\"display: none;\">\r\n");
      out.write("      <ul>\r\n");
      out.write("        <li>\r\n");
      out.write("          <a>WMS version:</a>\r\n");
      out.write("          <select id=\"wmsVersionSelector\" onchange=\"setWMSVersion(value)\">\r\n");
      out.write("            <option value=\"1.1.1\">1.1.1</option>\r\n");
      out.write("            <option value=\"1.3.0\">1.3.0</option>\r\n");
      out.write("          </select>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <a>Tiling:</a>\r\n");
      out.write("          <select id=\"tilingModeSelector\" onchange=\"setTileMode(value)\">\r\n");
      out.write("            <option value=\"untiled\">Single tile</option>\r\n");
      out.write("            <option value=\"tiled\">Tiled</option>\r\n");
      out.write("          </select>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <a>Antialias:</a>\r\n");
      out.write("          <select id=\"antialiasSelector\" onchange=\"setAntialiasMode(value)\">\r\n");
      out.write("            <option value=\"full\">Full</option>\r\n");
      out.write("            <option value=\"text\">Text only</option>\r\n");
      out.write("            <option value=\"none\">Disabled</option>\r\n");
      out.write("          </select>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <a>Format:</a>\r\n");
      out.write("          <select id=\"imageFormatSelector\" onchange=\"setImageFormat(value)\">\r\n");
      out.write("            <option value=\"image/png\">PNG 24bit</option>\r\n");
      out.write("            <option value=\"image/png8\">PNG 8bit</option>\r\n");
      out.write("            <option value=\"image/gif\">GIF</option>\r\n");
      out.write("            <option id=\"jpeg\" value=\"image/jpeg\">JPEG</option>\r\n");
      out.write("            <option id=\"jpeg-png\" value=\"image/vnd.jpeg-png\">JPEG-PNG</option>\r\n");
      out.write("          </select>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <a>Styles:</a>\r\n");
      out.write("          <select id=\"imageFormatSelector\" onchange=\"setStyle(value)\">\r\n");
      out.write("            <option value=\"\">Default</option>\r\n");
      out.write("          </select>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li>\r\n");
      out.write("          <a>Width/Height:</a>\r\n");
      out.write("          <select id=\"widthSelector\" onchange=\"setWidth(value)\">\r\n");
      out.write("             <!--\r\n");
      out.write("             These values come from a statistics of the viewable area given a certain screen area\r\n");
      out.write("             (but have been adapted a litte, simplified numbers, added some resolutions for wide screen)\r\n");
      out.write("             You can find them here: http://www.evolt.org/article/Real_World_Browser_Size_Stats_Part_II/20/2297/\r\n");
      out.write("             --><option value=\"auto\">Auto</option>\r\n");
      out.write("                <option value=\"600\">600</option>\r\n");
      out.write("                <option value=\"750\">750</option>\r\n");
      out.write("                <option value=\"950\">950</option>\r\n");
      out.write("                <option value=\"1000\">1000</option>\r\n");
      out.write("                <option value=\"1200\">1200</option>\r\n");
      out.write("                <option value=\"1400\">1400</option>\r\n");
      out.write("                <option value=\"1600\">1600</option>\r\n");
      out.write("                <option value=\"1900\">1900</option>\r\n");
      out.write("            </select>\r\n");
      out.write("            <select id=\"heigthSelector\" onchange=\"setHeight(value)\">\r\n");
      out.write("                <option value=\"auto\">Auto</option>\r\n");
      out.write("                <option value=\"300\">300</option>\r\n");
      out.write("                <option value=\"400\">400</option>\r\n");
      out.write("                <option value=\"500\">500</option>\r\n");
      out.write("                <option value=\"600\">600</option>\r\n");
      out.write("                <option value=\"700\">700</option>\r\n");
      out.write("                <option value=\"800\">800</option>\r\n");
      out.write("                <option value=\"900\">900</option>\r\n");
      out.write("                <option value=\"1000\">1000</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li>\r\n");
      out.write("              <a>Filter:</a>\r\n");
      out.write("              <select id=\"filterType\">\r\n");
      out.write("                  <option value=\"cql\">CQL</option>\r\n");
      out.write("                  <option value=\"ogc\">OGC</option>\r\n");
      out.write("                  <option value=\"fid\">FeatureID</option>\r\n");
      out.write("                  <option value=\"name\">Name</option>\r\n");
      out.write("                  <option value=\"name\">Pop</option>\r\n");
      out.write("              </select>\r\n");
      out.write("              <input type=\"text\" size=\"80\" id=\"filter\"/>\r\n");
      out.write("              <a id=\"updateFilterButton\" href=\"#\" onClick=\"updateFilter()\" title=\"Apply filter\">Apply</a>\r\n");
      out.write("              <a id=\"resetFilterButton\" href=\"#\" onClick=\"resetFilter()\" title=\"Reset filter\">Reset</a>\r\n");
      out.write("          </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div id=\"popup\" class=\"ol-popup\">\r\n");
      out.write("        <a href=\"#\" id=\"popup-closer\" class=\"ol-popup-closer\"></a>\r\n");
      out.write("        <div id=\"popup-content\"></div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <!-- *********** -->\r\n");
      out.write("    <div>\r\n");
      out.write("      <p>enter:</p>\r\n");
      out.write("      <input type=\"text\" size=\"80\" id=\"filterByName\" value=\"成\"/> \r\n");
      out.write("      <a id=\"updateFilterByNameButton\" href=\"#\" onClick=\"updateFilterByName()\" title=\"Apply filter\">Search</a>\r\n");
      out.write("      <a id=\"resetFilterByNameButton\" href=\"#\" onClick=\"resetFilterByName()\" title=\"Reset filter\">Reset</a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- *********** -->\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <div id=\"map\">\r\n");
      out.write("      <div class=\"ol-toggle-options ol-unselectable\"><a title=\"Toggle options toolbar\" onClick=\"toggleControlPanel()\" href=\"#toggle\">...</a></div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- <div id=\"popup\" class=\"ol-popup\">\r\n");
      out.write("      <a href=\"#\" id=\"popup-closer\" class=\"ol-popup-closer\"></a>\r\n");
      out.write("      <div id=\"popup-content\"></div>\r\n");
      out.write("    </div> -->\r\n");
      out.write("\r\n");
      out.write("    <div id=\"wrapper\">\r\n");
      out.write("        <div id=\"location\"></div>\r\n");
      out.write("        <div id=\"scale\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"nodelist\">\r\n");
      out.write("        <em>Click on the map to get feature info</em>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("      var pureCoverage = false;\r\n");
      out.write("      // if this is just a coverage or a group of them, disable a few items,\r\n");
      out.write("      // and default to jpeg format\r\n");
      out.write("      var format = 'image/png';\r\n");
      out.write("      var bounds = [97.352221, 26.049173,\r\n");
      out.write("                    108.542372, 34.314673];\r\n");
      out.write("      if (pureCoverage) {\r\n");
      out.write("        document.getElementById('antialiasSelector').disabled = true;\r\n");
      out.write("        document.getElementById('jpeg').selected = true;\r\n");
      out.write("        format = \"image/jpeg\";\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      var supportsFiltering = true;\r\n");
      out.write("      if (!supportsFiltering) {\r\n");
      out.write("        document.getElementById('filterType').disabled = true;\r\n");
      out.write("        document.getElementById('filter').disabled = true;\r\n");
      out.write("        document.getElementById('updateFilterButton').disabled = true;\r\n");
      out.write("        document.getElementById('resetFilterButton').disabled = true;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      var mousePositionControl = new ol.control.MousePosition({\r\n");
      out.write("        className: 'custom-mouse-position',\r\n");
      out.write("        target: document.getElementById('location'),\r\n");
      out.write("        coordinateFormat: ol.coordinate.createStringXY(5),\r\n");
      out.write("        undefinedHTML: '&nbsp;'\r\n");
      out.write("      });\r\n");
      out.write("      var untiled = new ol.layer.Image({\r\n");
      out.write("        source: new ol.source.ImageWMS({\r\n");
      out.write("          ratio: 1,\r\n");
      out.write("          url: 'http://localhost:8080/geoserver/scmap/wms',\r\n");
      out.write("          params: {'FORMAT': format,\r\n");
      out.write("                   'VERSION': '1.1.1',  \r\n");
      out.write("                \"STYLES\": '',\r\n");
      out.write("                \"LAYERS\": 'scmap:scmap',\r\n");
      out.write("                \"exceptions\": 'application/vnd.ogc.se_inimage',\r\n");
      out.write("          }\r\n");
      out.write("        })\r\n");
      out.write("      });\r\n");
      out.write("      var tiled = new ol.layer.Tile({\r\n");
      out.write("        visible: false,\r\n");
      out.write("        source: new ol.source.TileWMS({\r\n");
      out.write("          url: 'http://localhost:8080/geoserver/scmap/wms',\r\n");
      out.write("          params: {'FORMAT': format, \r\n");
      out.write("                   'VERSION': '1.1.1',\r\n");
      out.write("                   tiled: true,\r\n");
      out.write("                \"STYLES\": '',\r\n");
      out.write("                \"LAYERS\": 'scmap:scmap',\r\n");
      out.write("                \"exceptions\": 'application/vnd.ogc.se_inimage',\r\n");
      out.write("             tilesOrigin: 97.352221 + \",\" + 26.049173\r\n");
      out.write("          }\r\n");
      out.write("        })\r\n");
      out.write("      });\r\n");
      out.write("      var projection = new ol.proj.Projection({\r\n");
      out.write("          code: 'EPSG:4326',\r\n");
      out.write("          units: 'degrees',\r\n");
      out.write("          axisOrientation: 'neu',\r\n");
      out.write("          global: true\r\n");
      out.write("      });\r\n");
      out.write("      var map = new ol.Map({\r\n");
      out.write("        controls: ol.control.defaults({\r\n");
      out.write("          attribution: false\r\n");
      out.write("        }).extend([mousePositionControl]),\r\n");
      out.write("        target: 'map',\r\n");
      out.write("        layers: [\r\n");
      out.write("          untiled,\r\n");
      out.write("          tiled,\r\n");
      out.write("          //vector\r\n");
      out.write("        ],\r\n");
      out.write("        //overlays: [],  //popup overlay\r\n");
      out.write("        view: new ol.View({\r\n");
      out.write("           projection: projection\r\n");
      out.write("        })\r\n");
      out.write("      });\r\n");
      out.write("      map.getView().on('change:resolution', function(evt) {\r\n");
      out.write("        var resolution = evt.target.get('resolution');\r\n");
      out.write("        var units = map.getView().getProjection().getUnits();\r\n");
      out.write("        var dpi = 25.4 / 0.28;\r\n");
      out.write("        var mpu = ol.proj.METERS_PER_UNIT[units];\r\n");
      out.write("        var scale = resolution * mpu * 39.37 * dpi;\r\n");
      out.write("        if (scale >= 9500 && scale <= 950000) {\r\n");
      out.write("          scale = Math.round(scale / 1000) + \"K\";\r\n");
      out.write("        } else if (scale >= 950000) {\r\n");
      out.write("          scale = Math.round(scale / 1000000) + \"M\";\r\n");
      out.write("        } else {\r\n");
      out.write("          scale = Math.round(scale);\r\n");
      out.write("        }\r\n");
      out.write("        document.getElementById('scale').innerHTML = \"Scale = 1 : \" + scale;\r\n");
      out.write("      });\r\n");
      out.write("      map.getView().fit(bounds, map.getSize());\r\n");
      out.write("      map.on('singleclick', function(evt) {\r\n");
      out.write("        document.getElementById('nodelist').innerHTML = \"Loading... please wait...\";\r\n");
      out.write("        var view = map.getView();\r\n");
      out.write("        var viewResolution = view.getResolution();\r\n");
      out.write("        var source = untiled.get('visible') ? untiled.getSource() : tiled.getSource();\r\n");
      out.write("        var url = source.getGetFeatureInfoUrl(\r\n");
      out.write("          evt.coordinate, viewResolution, view.getProjection(),\r\n");
      out.write("          {'INFO_FORMAT': 'text/html', 'FEATURE_COUNT': 50});\r\n");
      out.write("        if (url) {\r\n");
      out.write("          document.getElementById('nodelist').innerHTML = '<iframe seamless src=\"' + url + '\"></iframe>';\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// ********************************************\r\n");
      out.write("\r\n");
      out.write("  //     var vectorSource = new ol.source.Vector();\r\n");
      out.write("  //               var vector = new ol.layer.Vector({\r\n");
      out.write("  //                   source: vectorSource,\r\n");
      out.write("  //                   style: new ol.style.Style({\r\n");
      out.write("  //                       stroke: new ol.style.Stroke({\r\n");
      out.write("  //                           color: 'rgba(0, 0, 255, 1.0)',\r\n");
      out.write("  //                           width: 2\r\n");
      out.write("  //                       })\r\n");
      out.write("  //                   })\r\n");
      out.write("  //               });\r\n");
      out.write("  //               map.addLayer(vector);\r\n");
      out.write("\r\n");
      out.write("  //               // generate a GetFeature request\r\n");
      out.write("  //               var featureRequest = new ol.format.WFS().writeGetFeature({\r\n");
      out.write("  //                   srsName: 'EPSG:4326',\r\n");
      out.write("  //                   featureNS: 'http://localhost:8080',    //命名空间\r\n");
      out.write("  //                   featurePrefix: 'scmap',               //工作区域\r\n");
      out.write("  //                   featureTypes: ['djs'],       //图层名\r\n");
      out.write("  //                   outputFormat: 'application/json',\r\n");
      out.write("  //                   filter:\r\n");
      out.write("  //                       ol.format.filter.equalTo('Name', '雅安市')\r\n");
      out.write("  //                       //ol.format.filter.equalTo('FeatureID', '11')    //todo 条件查询过滤\r\n");
      out.write("  // //                   filter: ol.format.filter.and(\r\n");
      out.write("  // //                        //ol.format.filter.intersects('the_geom', polygon, 'EPSG:4326'),\r\n");
      out.write("  // //                        ol.format.filter.equalTo('Name', '成都市')\r\n");
      out.write("  // // )\r\n");
      out.write("  //               });\r\n");
      out.write("\r\n");
      out.write("               \r\n");
      out.write("\r\n");
      out.write("  //               // then post the request and add the received features to a layer\r\n");
      out.write("\r\n");
      out.write("  //               fetch('http://localhost:8080/geoserver/wfs', {\r\n");
      out.write("  //                   method: 'POST',\r\n");
      out.write("  //                   body: new XMLSerializer().serializeToString(featureRequest)\r\n");
      out.write("  //               })\r\n");
      out.write("  //               .then(function(response) {\r\n");
      out.write("  //                   return response.json()\r\n");
      out.write("  //               })\r\n");
      out.write("  //               .then(function(json) {\r\n");
      out.write("  //                   var features = new ol.format.GeoJSON().readFeatures(json);\r\n");
      out.write("  //                   vectorSource.addFeatures(features);\r\n");
      out.write("  //                   map.getView().fit(vectorSource.getExtent());\r\n");
      out.write("  //               });\r\n");
      out.write("\r\n");
      out.write("// ********************************************\r\n");
      out.write("\r\n");
      out.write("//       var vectorSource = new ol.source.Vector();\r\n");
      out.write("//                 var vector = new ol.layer.Vector({\r\n");
      out.write("//                     source: vectorSource,\r\n");
      out.write("//                     style: new ol.style.Style({\r\n");
      out.write("//                         stroke: new ol.style.Stroke({\r\n");
      out.write("//                             color: 'rgba(0, 0, 255, 1.0)',\r\n");
      out.write("//                             width: 2\r\n");
      out.write("//                         })\r\n");
      out.write("//                     })\r\n");
      out.write("//                 });\r\n");
      out.write("//                 map.addLayer(vector);\r\n");
      out.write("\r\n");
      out.write("// var featureRequest = new ol.format.WFS().writeGetFeature({\r\n");
      out.write("//         srsName: 'EPSG:3857',\r\n");
      out.write("//         featureNS: 'http://localhost:8080/geoserver',\r\n");
      out.write("//         featurePrefix: 'scmap',\r\n");
      out.write("//         featureTypes: ['djs'],\r\n");
      out.write("//         outputFormat: 'application/json',\r\n");
      out.write("//         filter: andFilter(\r\n");
      out.write("//           likeFilter('Name', '成都市'),\r\n");
      out.write("//           equalToFilter('Name', '成都市')\r\n");
      out.write("//         )\r\n");
      out.write("//       });\r\n");
      out.write("\r\n");
      out.write("//       // then post the request and add the received features to a layer\r\n");
      out.write("//       fetch('http://localhost:8080/mymap.jsp', {\r\n");
      out.write("//         method: 'POST',\r\n");
      out.write("//         body: new XMLSerializer().serializeToString(featureRequest)\r\n");
      out.write("//       }).then(function(response) {\r\n");
      out.write("//         return response.json();\r\n");
      out.write("//       }).then(function(json) {\r\n");
      out.write("//         var features = new GeoJSON().readFeatures(json);\r\n");
      out.write("//         vectorSource.addFeatures(features);\r\n");
      out.write("//         map.getView().fit(vectorSource.getExtent());\r\n");
      out.write("//       });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//***********************************\r\n");
      out.write("\r\n");
      out.write("// function getWfsData(filter) {\r\n");
      out.write("//         //获取wms生成的资源url， fdLayer.getSource().getGetFeatureInfoUrl\r\n");
      out.write("//         var featureRequest = new ol.format.WFS().writeGetFeature({\r\n");
      out.write("//             srsName: 'EPSG:4326',//坐标系统\r\n");
      out.write("//             featureNS: 'scmap',//命名空间 URI\r\n");
      out.write("//             featurePrefix: 'scmap',//工作区名称\r\n");
      out.write("//             featureTypes: ['scmap:djs'],//查询图层，可以同一个工作区下多个图层，逗号隔开\r\n");
      out.write("//             outputFormat: 'application/json',\r\n");
      out.write("//             filter: filter\r\n");
      out.write("//         });\r\n");
      out.write("//         fetch(geourl + 'localhost:8080/mymap.jsp', {//geoserver wfs地址如localhost:8080/geoserver/wfs\r\n");
      out.write("//             method: 'POST',\r\n");
      out.write("//             body: new XMLSerializer().serializeToString(featureRequest)\r\n");
      out.write("//         }).then(function (response) {\r\n");
      out.write("//             return response.json();\r\n");
      out.write("//         }).then(function (json) {\r\n");
      out.write("//             //查询结果\r\n");
      out.write("//             console.log(json);\r\n");
      out.write("//             if (json.features && json.features.length > 0) {\r\n");
      out.write("//                 var gj = new ol.format.GeoJSON();\r\n");
      out.write("//                 var features=gj.readFeatures(json);\r\n");
      out.write("//             }\r\n");
      out.write("//         })\r\n");
      out.write("//    }\r\n");
      out.write("\r\n");
      out.write("//    getWfsData()\r\n");
      out.write("\r\n");
      out.write("   //************************\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      // sets the chosen WMS version\r\n");
      out.write("      function setWMSVersion(wmsVersion) {\r\n");
      out.write("        map.getLayers().forEach(function(lyr) {\r\n");
      out.write("          lyr.getSource().updateParams({'VERSION': wmsVersion});\r\n");
      out.write("        });\r\n");
      out.write("        if(wmsVersion == \"1.3.0\") {\r\n");
      out.write("            origin = bounds[1] + ',' + bounds[0];\r\n");
      out.write("        } else {\r\n");
      out.write("            origin = bounds[0] + ',' + bounds[1];\r\n");
      out.write("        }\r\n");
      out.write("        tiled.getSource().updateParams({'tilesOrigin': origin});\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // Tiling mode, can be 'tiled' or 'untiled'\r\n");
      out.write("      function setTileMode(tilingMode) {\r\n");
      out.write("        if (tilingMode == 'tiled') {\r\n");
      out.write("          untiled.set('visible', false);\r\n");
      out.write("          tiled.set('visible', true);\r\n");
      out.write("        } else {\r\n");
      out.write("          tiled.set('visible', false);\r\n");
      out.write("          untiled.set('visible', true);\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function setAntialiasMode(mode) {\r\n");
      out.write("        map.getLayers().forEach(function(lyr) {\r\n");
      out.write("          lyr.getSource().updateParams({'FORMAT_OPTIONS': 'antialias:' + mode});\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // changes the current tile format\r\n");
      out.write("      function setImageFormat(mime) {\r\n");
      out.write("        map.getLayers().forEach(function(lyr) {\r\n");
      out.write("          lyr.getSource().updateParams({'FORMAT': mime});\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function setStyle(style){\r\n");
      out.write("        map.getLayers().forEach(function(lyr) {\r\n");
      out.write("          lyr.getSource().updateParams({'STYLES': style});\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function setWidth(size){\r\n");
      out.write("        var mapDiv = document.getElementById('map');\r\n");
      out.write("        var wrapper = document.getElementById('wrapper');\r\n");
      out.write("\r\n");
      out.write("        if (size == \"auto\") {\r\n");
      out.write("          // reset back to the default value\r\n");
      out.write("          mapDiv.style.width = null;\r\n");
      out.write("          wrapper.style.width = null;\r\n");
      out.write("        }\r\n");
      out.write("        else {\r\n");
      out.write("          mapDiv.style.width = size + \"px\";\r\n");
      out.write("          wrapper.style.width = size + \"px\";\r\n");
      out.write("        }\r\n");
      out.write("        // notify OL that we changed the size of the map div\r\n");
      out.write("        map.updateSize();\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function setHeight(size){\r\n");
      out.write("        var mapDiv = document.getElementById('map');\r\n");
      out.write("        if (size == \"auto\") {\r\n");
      out.write("          // reset back to the default value\r\n");
      out.write("          mapDiv.style.height = null;\r\n");
      out.write("        }\r\n");
      out.write("        else {\r\n");
      out.write("          mapDiv.style.height = size + \"px\";\r\n");
      out.write("        }\r\n");
      out.write("        // notify OL that we changed the size of the map div\r\n");
      out.write("        map.updateSize();\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function updateFilter(){\r\n");
      out.write("        if (!supportsFiltering) {\r\n");
      out.write("          return;\r\n");
      out.write("        }\r\n");
      out.write("        var filterType = document.getElementById('filterType').value;\r\n");
      out.write("        var filter = document.getElementById('filter').value;\r\n");
      out.write("        // by default, reset all filters\r\n");
      out.write("        var filterParams = {\r\n");
      out.write("          'FILTER': null,\r\n");
      out.write("          'CQL_FILTER': null,\r\n");
      out.write("          'FEATUREID': null,\r\n");
      out.write("          'NAME': null,\r\n");
      out.write("          'P':null,\r\n");
      out.write("        };\r\n");
      out.write("        if (filter.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '') != \"\") {\r\n");
      out.write("          if (filterType == \"cql\") {\r\n");
      out.write("            filterParams[\"CQL_FILTER\"] = filter;\r\n");
      out.write("          }\r\n");
      out.write("          if (filterType == \"ogc\") {\r\n");
      out.write("            filterParams[\"FILTER\"] = filter;\r\n");
      out.write("          }\r\n");
      out.write("          if (filterType == \"fid\")\r\n");
      out.write("            filterParams[\"FEATUREID\"] = filter;\r\n");
      out.write("          if (filterType == \"name\")\r\n");
      out.write("            filterParams[\"NAME\"] = filter;\r\n");
      out.write("          if (filterType == \"pop\")\r\n");
      out.write("            filterParams[\"populatioin\"] = filter;\r\n");
      out.write("          }\r\n");
      out.write("          \r\n");
      out.write("          // merge the new filter definitions\r\n");
      out.write("          map.getLayers().forEach(function(lyr) {\r\n");
      out.write("            lyr.getSource().updateParams(filterParams);\r\n");
      out.write("          });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function resetFilter() {\r\n");
      out.write("          if (!supportsFiltering) {\r\n");
      out.write("            return;\r\n");
      out.write("          }\r\n");
      out.write("          document.getElementById('filter').value = \"\";\r\n");
      out.write("          updateFilter();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // shows/hide the control panel\r\n");
      out.write("        function toggleControlPanel(){\r\n");
      out.write("          var toolbar = document.getElementById(\"toolbar\");\r\n");
      out.write("          if (toolbar.style.display == \"none\") {\r\n");
      out.write("            toolbar.style.display = \"block\";\r\n");
      out.write("          }\r\n");
      out.write("          else {\r\n");
      out.write("            toolbar.style.display = \"none\";\r\n");
      out.write("          }\r\n");
      out.write("          map.updateSize()\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("  function updateFilterByName() {\r\n");
      out.write("\r\n");
      out.write("      var filterByName = document.getElementById('filterByName').value;\r\n");
      out.write("      if(filterByName === ''){\r\n");
      out.write("        // return;\r\n");
      out.write("        filterByName=\"+\"\r\n");
      out.write("      }\r\n");
      out.write("       \r\n");
      out.write("      var xFeatureStyle = new ol.style.Style({\r\n");
      out.write("        image: new ol.style.Icon({\r\n");
      out.write("          opacity: 0.95,\r\n");
      out.write("          size: [52, 52],\r\n");
      out.write("          src: \"map3.png\"\r\n");
      out.write("        }),\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      // generate a GetFeature request\r\n");
      out.write("      var featureRequest = new ol.format.WFS().writeGetFeature({\r\n");
      out.write("        srsName: 'EPSG:4326',\r\n");
      out.write("        featureNS: 'http://localhost:8080',    //命名空间\r\n");
      out.write("        featurePrefix: 'scmap',               //工作区域\r\n");
      out.write("        featureTypes: ['djs'],       //图层名\r\n");
      out.write("        outputFormat: 'application/json',\r\n");
      out.write("        filter:\r\n");
      out.write("          ol.format.filter.like('Name', '*' + filterByName + '*')\r\n");
      out.write("\r\n");
      out.write("        // ol.format.filter.and(\r\n");
      out.write("        //   ol.format.filter.like('Name', '*市'),\r\n");
      out.write("        //   ol.format.filter.equalTo('Name', '成都市')\r\n");
      out.write("        //     )\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      // then post the request and add the received features to a layer\r\n");
      out.write("      var featuresList = [];\r\n");
      out.write("\r\n");
      out.write("      fetch('http://localhost:8080/geoserver/wfs', {\r\n");
      out.write("        method: 'POST',\r\n");
      out.write("        body: new XMLSerializer().serializeToString(featureRequest)\r\n");
      out.write("      })\r\n");
      out.write("        .then(function (response) {\r\n");
      out.write("          return response.json()\r\n");
      out.write("        })\r\n");
      out.write("        .then(function (json) {\r\n");
      out.write("          console.log(json)\r\n");
      out.write("          var features = new ol.format.GeoJSON().readFeatures(json);\r\n");
      out.write("\r\n");
      out.write("          var vectorSource1 = new ol.source.Vector({});\r\n");
      out.write("\r\n");
      out.write("          for (var item of json.features) {\r\n");
      out.write("            var px = item.properties.POINT_X;\r\n");
      out.write("            var py = item.properties.POINT_Y;\r\n");
      out.write("            var point = new ol.geom.Point([px, py], \"XY\")\r\n");
      out.write("            var xFeature = new ol.Feature({\r\n");
      out.write("              geometry: point,\r\n");
      out.write("              name: item.properties.Name,\r\n");
      out.write("            });\r\n");
      out.write("            console.log(xFeature.name)\r\n");
      out.write("            featuresList.push(xFeature)\r\n");
      out.write("            xFeature.setStyle(xFeatureStyle)\r\n");
      out.write("            vectorSource1.addFeature(xFeature);\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          //popup\r\n");
      out.write("          var container = document.getElementById(\"popup\");\r\n");
      out.write("          var content = document.getElementById(\"popup-content\");\r\n");
      out.write("          var popupCloser = document.getElementById(\"popup-closer\");\r\n");
      out.write("          var overlay = new ol.Overlay({\r\n");
      out.write("            //设置弹出框的容器\r\n");
      out.write("            element: container,\r\n");
      out.write("            //是否自动平移，即假如标记在屏幕边缘，弹出时自动平移地图使弹出框完全可见\r\n");
      out.write("            autoPan: true\r\n");
      out.write("          });\r\n");
      out.write("\r\n");
      out.write("          var vectorLayer1 = new ol.layer.Vector({\r\n");
      out.write("            source: vectorSource1,\r\n");
      out.write("          });\r\n");
      out.write("          map.addLayer(vectorLayer1)\r\n");
      out.write("          //map.addOverlay(overlay)\r\n");
      out.write("\r\n");
      out.write("           popupCloser.onclick = function () {\r\n");
      out.write("              overlay.setPosition(undefined);\r\n");
      out.write("              popupCloser.blur();\r\n");
      out.write("              return false;\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("          map.on('click', function (e) {\r\n");
      out.write("            map.addOverlay(overlay);\r\n");
      out.write("            //在点击时获取像素区域\r\n");
      out.write("            var pixel = map.getEventPixel(e.originalEvent);\r\n");
      out.write("            map.forEachFeatureAtPixel(pixel, function (feature) {\r\n");
      out.write("              for (var itm of featuresList) {\r\n");
      out.write("                //coodinate存放了点击时的坐标信息\r\n");
      out.write("                var coodinate = e.coordinate;\r\n");
      out.write("                //设置弹出框内容，可以HTML自定义\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                var content = document.getElementById(\"popup-content\");\r\n");
      out.write("\r\n");
      out.write("                //设置overlay的显示位置\r\n");
      out.write("                if (feature == itm) {\r\n");
      out.write("                  content.innerHTML = \"<p>\"+itm.get('name')+\"(\"+\r\n");
      out.write("                  itm.getGeometry().getCoordinates()+\")</p>\";\r\n");
      out.write("                }\r\n");
      out.write("              }\r\n");
      out.write("              \r\n");
      out.write("              overlay.setPosition(coodinate);\r\n");
      out.write("              //显示overlay\r\n");
      out.write("              // map.addOverlay(overlay);\r\n");
      out.write("            });\r\n");
      out.write("          });\r\n");
      out.write("\r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("    function resetFilterByName(){\r\n");
      out.write("      document.getElementById('filterByName').value=''\r\n");
      out.write("      window.location.reload(true);\r\n");
      out.write("      //updateFilterByName();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // map.on('click', function (e) {\r\n");
      out.write("    //     //在点击时获取像素区域\r\n");
      out.write("    //     var pixel = map.getEventPixel(e.originalEvent);\r\n");
      out.write("    //     map.forEachFeatureAtPixel(pixel, function (feature) {\r\n");
      out.write("    //       //coodinate存放了点击时的坐标信息\r\n");
      out.write("    //       var coodinate = e.coordinate;\r\n");
      out.write("    //       //设置弹出框内容，可以HTML自定义\r\n");
      out.write("\r\n");
      out.write("    //       var content = document.getElementById(\"popup-content\");\r\n");
      out.write("    //       content.innerHTML = \"<p>This is the library of Sichuan University on Jiangan campus.</p>\" \r\n");
      out.write("\r\n");
      out.write("          \r\n");
      out.write("    //       // //设置overlay的显示位置\r\n");
      out.write("    //       // if (feature == libraryFeature) {\r\n");
      out.write("    //       //   content.innerHTML = \"<p>This is the library of Sichuan University on Jiangan campus.</p>\" +\r\n");
      out.write("    //       //     \"<a target='_blank' href='https://baike.baidu.com/item/%E5%9B%9B%E5%B7%9D%E5%A4%A7%E5%AD%A6%E5%9B%BE%E4%B9%A6%E9%A6%86/5267732'>\"\r\n");
      out.write("    //       //     + \"<img src='library_photo.jpg' width='300'/></a>\";\r\n");
      out.write("    //       // }\r\n");
      out.write("    //       // if (feature == gateFeature) {\r\n");
      out.write("    //       //   content.innerHTML = \"<p>This is the south gate of the Jiangan campus of Sichuan University.</p>\" +\r\n");
      out.write("    //       //     \"<a target='_blank' href='https://baike.baidu.com/item/%E5%9B%9B%E5%B7%9D%E5%A4%A7%E5%AD%A6%E6%B1%9F%E5%AE%89%E6%A0%A1%E5%8C%BA'>\"\r\n");
      out.write("    //       //     + \"<img src='southgate_photo.jpg' width='300'/></a>\";\r\n");
      out.write("    //       // }\r\n");
      out.write("    //       // if (feature == buildingFeature) {\r\n");
      out.write("    //       //   content.innerHTML = \"<p>This is the teaching building on the Wangjiang campus of Sichuan University.</p>\" +\r\n");
      out.write("    //       //     \"<a target='_blank' href='https://baike.baidu.com/item/%E5%9B%9B%E5%B7%9D%E5%A4%A7%E5%AD%A6%E6%9C%9B%E6%B1%9F%E6%A0%A1%E5%8C%BA/5022226?fr=aladdin'>\"\r\n");
      out.write("    //       //     + \"<img src='building_photo.jpg' width='300'/></a>\";\r\n");
      out.write("    //       // }\r\n");
      out.write("    //       overlay.setPosition(coodinate);\r\n");
      out.write("    //       //显示overlay\r\n");
      out.write("    //       map.addOverlay(overlay);\r\n");
      out.write("    //     });\r\n");
      out.write("    //   });\r\n");
      out.write("\r\n");
      out.write("      // popupCloser.onclick = function () {\r\n");
      out.write("      //   overlay.setPosition(undefined);\r\n");
      out.write("      //   popupCloser.blur();\r\n");
      out.write("      //   return false;\r\n");
      out.write("      // };\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
